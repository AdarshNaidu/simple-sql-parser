name: Create Release With Assets

on:
  push:
    tags:
      - 'v*'

jobs:
  # Create all builds for various platforms
  build-artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ { 'os': 'darwin', 'arch': 'amd64' }, { 'os': 'darwin', 'arch': 'arm64' }, { 'os': 'linux', 'arch': 'amd64' }, { 'os': 'linux', 'arch': '386' } ]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.16.5'

    - name: Create Artifact
      run: |
        GOOS=${{ matrix.target.os }} GOARCH=${{ matrix.target.arch }} go build -o simple_sql_parser
        zip -j -r simple_sql_parser_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip simple_sql_parser
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: simple_sql_parser_${{ matrix.target.os }}_${{ matrix.target.arch }}
        path: simple_sql_parser_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip

  # Create the release for the tag
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-artifacts
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  # Add all the builds as assets to the release
  add-assets:
    runs-on: ubuntu-latest
    needs: [ build-artifacts, create-release ]
    strategy:
      matrix:
        target: [ { 'os': 'darwin', 'arch': 'amd64' }, { 'os': 'darwin', 'arch': 'arm64' }, { 'os': 'linux', 'arch': 'amd64' }, { 'os': 'linux', 'arch': '386' } ]

    steps:
    - uses: actions/checkout@v2

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: simple_sql_parser_${{ matrix.target.os }}_${{ matrix.target.arch }}

    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./simple_sql_parser_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip
        asset_name: simple_sql_parser_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip
        asset_content_type: application/zip